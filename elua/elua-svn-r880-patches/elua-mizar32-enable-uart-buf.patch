Index: elua-svn/src/platform/avr32/MIZAR32/mizar32_conf.h
===================================================================
--- elua-svn.orig/src/platform/avr32/MIZAR32/mizar32_conf.h	2011-01-15 23:06:15.806154000 +0100
+++ elua-svn/src/platform/avr32/MIZAR32/mizar32_conf.h	2011-01-15 23:07:09.062153999 +0100
@@ -106,15 +106,28 @@
 #define RPC_TIMER_ID          CON_TIMER_ID
 #define RPC_UART_SPEED        CON_UART_SPEED
 
-// On Mizar32, enabling RX buffering on UART requires the presence of a serial
-// board or a 1k resistor between pins 3 and 13 of P5; otherwise the open RX
-// input oscillates with the ambient EMI causing many spurious interrupts
-// and crashes the interpreter.  Therefore by default we disable the buffering
-// so that serial interrupts are not enabled.
-//#define BUF_ENABLE_UART
-//#define CON_BUF_SIZE          BUF_SIZE_128
-// REMEMBER to change next line if buffering is enabled and CON_UART_ID is not 0!
-//#define CON_UART_IRQ          AVR32_USART0_IRQ
+// Enable RX buffering on UART
+#define BUF_ENABLE_UART
+
+#ifdef BUF_ENABLE_UART
+  // As flow control seems not to work, we use a large buffer so that people
+  // can copy/paste program fragments or data into the serial console.
+  // An 80x25 screenful is 2000 characters so we use 2048 and the buffer is
+  // allocated from the 32MB SDRAM so there is no effective limit.
+# define CON_BUF_SIZE          BUF_SIZE_2048
+
+# if   CON_UART_ID == 0
+#  define CON_UART_IRQ          AVR32_USART0_IRQ
+# elif CON_UART_ID == 1
+#  define CON_UART_IRQ          AVR32_USART1_IRQ
+# elif CON_UART_ID == 2
+#  define CON_UART_IRQ          AVR32_USART2_IRQ
+# elif CON_UART_ID == 3
+#  define CON_UART_IRQ          AVR32_USART3_IRQ
+# else
+#  error "You need to define CON_UART_ID / CON_UART_IRQ"
+# endif
+#endif
 
 // SD/MMC Filesystem Setup
 #define MMCFS_TICK_HZ                10
