Index: elua/src/lua/linit.c
===================================================================
--- elua.orig/src/lua/linit.c	2011-04-06 19:18:40.272348002 +0200
+++ elua/src/lua/linit.c	2011-04-12 16:36:38.517086482 +0200
@@ -26,7 +26,9 @@
 #if LUA_OPTIMIZE_MEMORY == 0
   {LUA_MATHLIBNAME, luaopen_math},
   {LUA_TABLIBNAME, luaopen_table},  
-  {LUA_DBLIBNAME, luaopen_debug},  
+# ifndef NO_DEBUG
+  {LUA_DBLIBNAME, luaopen_debug},
+# endif
 #endif
 #ifdef LUA_PLATFORM_LIBS_REG
   LUA_PLATFORM_LIBS_REG,
@@ -53,7 +55,9 @@
 #if LUA_OPTIMIZE_MEMORY > 0
   {LUA_STRLIBNAME, strlib},
   {LUA_TABLIBNAME, tab_funcs},
+#ifndef NO_DEBUG
   {LUA_DBLIBNAME, dblib},
+#endif
   {LUA_COLIBNAME, co_funcs},
 #if defined(LUA_PLATFORM_LIBS_ROM) && LUA_OPTIMIZE_MEMORY == 2
 #undef _ROM
Index: elua/src/lua/lua.c
===================================================================
--- elua.orig/src/lua/lua.c	2011-04-12 16:36:23.577086481 +0200
+++ elua/src/lua/lua.c	2011-04-12 16:36:38.521086482 +0200
@@ -64,6 +64,9 @@
 
 
 static int traceback (lua_State *L) {
+#ifdef NO_DEBUG
+  return 1;
+#else
   if (!lua_isstring(L, 1))  /* 'message' not a string? */
     return 1;  /* keep it intact */
   lua_getfield(L, LUA_GLOBALSINDEX, "debug");
@@ -80,6 +83,7 @@
   lua_pushinteger(L, 2);  /* skip this function and traceback */
   lua_call(L, 2, 1);  /* call debug.traceback */
   return 1;
+#endif
 }
 
 
Index: elua/src/lua/luaconf.h
===================================================================
--- elua.orig/src/lua/luaconf.h	2011-04-12 16:36:35.917086482 +0200
+++ elua/src/lua/luaconf.h	2011-04-12 16:36:38.521086482 +0200
@@ -19,6 +19,13 @@
 
 
 /*
+@@ NO_DEBUG removes the Lua debug module.
+** Some elements of this mechanism remain to implement stack tracebacks.
+*/
+#define NO_DEBUG
+
+
+/*
 @@ LUA_ANSI controls the use of non-ansi features.
 ** CHANGE it (define it) if you want Lua to avoid the use of any
 ** non-ansi feature or library.
Index: elua/src/lua/ldblib.c
===================================================================
--- elua.orig/src/lua/ldblib.c	2011-04-06 19:29:42.480348030 +0200
+++ elua/src/lua/ldblib.c	2011-04-12 16:36:38.521086482 +0200
@@ -19,6 +19,8 @@
 #include "lrotable.h"
 
 
+#ifndef NO_DEBUG
+
 
 static int db_getregistry (lua_State *L) {
   lua_pushvalue(L, LUA_REGISTRYINDEX);
@@ -395,3 +397,6 @@
 LUALIB_API int luaopen_debug (lua_State *L) {
   LREGISTER(L, LUA_DBLIBNAME, dblib);
 }
+
+
+#endif  // NO_DEBUG
