If _FS_MINIMIZE == 2 in src/fatfs/ffconf.h, this patch stops the unused
entries for opendir(), readdir(), closedir() from being built in mmcfs.c
(otherwise they are included in the executable because a table points at them).

Index: elua/src/mmcfs.c
===================================================================
--- elua.orig/src/mmcfs.c	2011-04-06 19:18:40.404348002 +0200
+++ elua/src/mmcfs.c	2011-04-12 16:36:33.101086483 +0200
@@ -183,6 +183,7 @@
   return newpos;
 }
 
+#if _FS_MINIMIZE < 2
 // opendir
 static DIR mmc_dir;
 static void* mmcfs_opendir_r( struct _reent *r, const char* dname )
@@ -234,6 +235,7 @@
 {
   return 0;
 }
+#endif // _FS_MINIMIZE
 
 // MMC device descriptor structure
 static DM_DEVICE mmcfs_device =
@@ -244,9 +246,13 @@
   mmcfs_write_r,        // write
   mmcfs_read_r,         // read
   mmcfs_lseek_r,        // lseek
+#if _FS_MINIMIZE < 2
   mmcfs_opendir_r,      // opendir
   mmcfs_readdir_r,      // readdir
   mmcfs_closedir_r      // closedir
+#else
+  NULL, NULL, NULL
+#endif
 };
 
 const DM_DEVICE* mmcfs_init()
Index: elua/src/fatfs/ffconf.h
===================================================================
--- elua.orig/src/fatfs/ffconf.h	2011-04-06 19:18:40.416348002 +0200
+++ elua/src/fatfs/ffconf.h	2011-04-12 16:36:33.101086483 +0200
@@ -12,6 +12,7 @@
 #include "type.h"
 #include "integer.h"
 #include "devman.h"
+#include "platform_conf.h"
 
 /*---------------------------------------------------------------------------/
 / Function and Buffer Configurations
@@ -29,7 +30,13 @@
 /  f_truncate and useless f_getfree. */
 
 
+// Only the SHELL uses opendir/readdir/closedir at present.
+// A minimal implementation of the "os" library might in future.
+#ifdef BUILD_SHELL
 #define _FS_MINIMIZE	1	/* 0, 1, 2 or 3 */
+#else
+#define _FS_MINIMIZE	2	/* 0, 1, 2 or 3 */
+#endif
 /* The _FS_MINIMIZE option defines minimization level to remove some functions.
 /
 /   0: Full function.
Index: elua/src/romfs.c
===================================================================
--- elua.orig/src/romfs.c	2011-04-06 19:18:40.392348002 +0200
+++ elua/src/romfs.c	2011-04-12 16:36:33.101086483 +0200
@@ -154,6 +154,8 @@
 }
 
 // Directory operations
+
+#ifdef BUILD_SHELL
 static u32 romfs_dir_data = 0;
 
 // opendir
@@ -192,6 +194,7 @@
   *( u32* )d = 0;
   return 0;
 }
+#endif  // BUILD_SHELL
 
 // Our ROMFS device descriptor structure
 static const DM_DEVICE romfs_device = 
@@ -202,9 +205,13 @@
   romfs_write_r,        // write
   romfs_read_r,         // read
   romfs_lseek_r,        // lseek
+#ifdef BUILD_SHELL
   romfs_opendir_r,      // opendir
   romfs_readdir_r,      // readdir
   romfs_closedir_r      // closedir
+#else
+  NULL, NULL, NULL
+#endif
 };
 
 const DM_DEVICE* romfs_init()
